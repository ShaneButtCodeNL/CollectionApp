@using CollectionApp.Models;
@using System.Text.Json;
@inject IHttpClientFactory _clientFactory

@if(string.IsNullOrWhiteSpace(errorString)==false){
    <div>@errorString</div>
}
else if(items == null){
    <div>Loading . . .</div>
}

else{
    @foreach (Item item in items)
    {
        <ItemDisplay DisplayItem=@item/>
    }
}

@code {
    [Parameter]
    public string? ItemCall{get;set;}
    private List<Item>? items;
    private string? errorString;
    private string ApiString="https://localhost:7000/api/Item/";

    private ItemDetails? GetDetails(Item i){
        return JsonSerializer.Deserialize<ItemDetails>(i.Details);
    }

    protected override async Task OnInitializedAsync(){
        var req=new HttpRequestMessage(HttpMethod.Get,$"{@ApiString}{@ItemCall}");
        
        var client=_clientFactory.CreateClient();

        HttpResponseMessage res=await client.SendAsync(req);
        if(res.IsSuccessStatusCode){
            items=await res.Content.ReadFromJsonAsync<List<Item>>();
            items.Sort();
            errorString=null;
        }
        else {
            errorString=$"Something went wrong: {res.ReasonPhrase}";
            items=new List<Item>();
        }
    }
}