
<div class="loginWindowContainer @displayClass">
   <div class="loginWindow" @onclick="@Cancel" >
      <div class="loginFormWrapper" @onclick:stopPropagation="true">
      <form class="loginForm @FormMode">
         <label for="username">UserName:</label>
         <input type="text" @bind="@Username" @oninput="@((e)=>{Username=(string)e.Value;})" name="username"/>
         <label for="password">Password:</label>
         <input type="password" @bind="@Password" name="password" @oninput="@((e)=>{Password=(string)e.Value;})" />
         <button type="button" @onclick="@LoginAction">Login</button>
         <button type="button" @onclick="@Cancel">Cancel</button>
      </form>
   </div>
   </div>
</div>
@code{
   private string displayClass="";
   private string Username{get;set;}="";
   private string Password{get;set;}="";
   private bool show;
   [Parameter]
   public string FormMode{get;set;}
   [Parameter]
   public bool Show{get=>show;
      set{
         show=value;
         if(show)displayClass="show";
         else {
            displayClass="hide";
            ResetFields();
         }
      }
   }
   [Parameter]
   public Action ChangeShow{get;set;}
   [Parameter]
   public Action<string,string> Login{get;set;}
   [Parameter]
   public bool loggedIn{get;set;}

   private async void LoginAction(){
      Login(Username,Password);
      //Console.WriteLine(Username+" "+Password);
   }
   private void Cancel(){
      ChangeShow();
   }
   private void ResetFields(){
      Username="";
      Password="";
   }
}