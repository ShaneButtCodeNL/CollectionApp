@inherits LayoutComponentBase
@inject IHttpClientFactory _clientFactory


<PageTitle>CollectionApp</PageTitle>
<div class="page @Mode @MyMode">
    <LoginWindow Login="@Login" Show="@Show" FormMode="@FormMode" ChangeShow="@ChangeShow"/>
    <AddItem ChangeShowAddItem="@ChangeShowAddItem" ShowAddItem="@ShowAddItem" FormMode="@FormMode" />
    <div class="mainApp">
        <TitleBar ChangeMode="@ChangeMode" Mode="@Mode" Show="@Show" ChangeShow="@ChangeShow" loggedIn="@loggedIn" Logout="@Logout" ChangeShowAddItem="@ChangeShowAddItem" />
        <MainNav Mode="@Mode" />        
        <main>
            @Body
        </main>
    </div>
</div>

@code{
    private string Mode="darkMode";
    private string FormMode="darkForm";

    private string MyMode="darkModeMain";

    public bool loggedIn=true;
    public bool Show=false;

    public bool ShowAddItem=false;

    private readonly string ApiString="https://localhost:7000/api/Login";

    private readonly HttpClient client=new HttpClient();

    public async void Login(string user,string pass){
      var data=new {username=user,password=pass};
      var res=await client.PostAsJsonAsync(ApiString,data);
      Console.WriteLine("RES:"+res.ToString());
      loggedIn=res.StatusCode==System.Net.HttpStatusCode.NoContent;
      if(loggedIn)Show=false;
      StateHasChanged();
   }

   public async void Logout(){
       loggedIn=false;
       StateHasChanged();

   }

   public void ChangeShow(){
       Show=!Show;
       StateHasChanged();
   }

   public void ChangeShowAddItem(){
       ShowAddItem = !ShowAddItem;
       StateHasChanged();

   }

    public void ChangeMode(){
        if(Mode=="darkMode"){
            Mode="lightMode";
            MyMode="lightModeMain";
            FormMode="lightForm";
        }
        else{
             Mode="darkMode";
             MyMode="darkModeMain";
             FormMode="darkForm";
        }
        StateHasChanged();
    }
}