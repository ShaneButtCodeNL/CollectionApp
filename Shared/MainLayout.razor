@inherits LayoutComponentBase
@using CollectionApp.Models;
@inject IHttpClientFactory _clientFactory

<CascadingValue Value="@Mode">
    <CascadingValue Value="@LoggedIn">
        <CascadingValue Value=@Refresh>
        <PageTitle>CollectionApp</PageTitle>
        <div class="page @Mode @MyMode">
            <LoginWindow Login="@Login" Show="@Show" FormMode="@FormMode" ChangeShow="@ChangeShow"/>
            <AddItem ChangeShowAddItem="@ChangeShowAddItem" ShowAddItem="@ShowAddItem" FormMode="@FormMode" />
            <div class="mainApp">
                <TitleBar ChangeMode="@ChangeMode" Mode="@Mode" Show="@Show" ChangeShow="@ChangeShow" loggedIn="@LoggedIn" Logout="@Logout" ChangeShowAddItem="@ChangeShowAddItem" />
                <MainNav Mode="@Mode" />        
                 @Body
            </div>
        </div>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>

@code{
    private string Mode="darkMode";
    private string FormMode="darkForm";

    private string MyMode="darkModeMain";

    public bool LoggedIn=true;
    public bool Show=false;

    public bool ShowAddItem=false;

    private readonly string ApiLoginString="https://localhost:7000/api/Login";

    private readonly HttpClient client=new HttpClient();

    public void Refresh(){
        Console.WriteLine("Refresh called . . .");
        StateHasChanged();
    }

    public async void Login(string user,string pass){
      var data=new {username=user,password=pass};
      var res=await client.PostAsJsonAsync(ApiLoginString,data);
      Console.WriteLine("RES:"+res.ToString());
      LoggedIn=res.StatusCode==System.Net.HttpStatusCode.NoContent;
      if(LoggedIn)Show=false;
      StateHasChanged();
   }

   public async void Logout(){
       LoggedIn=false;
       StateHasChanged();

   }

   public void ChangeShow(){
       Show=!Show;
       StateHasChanged();
   }

   public void ChangeShowAddItem(){
       ShowAddItem = !ShowAddItem;
       StateHasChanged();

   }

    public void ChangeMode(){
        if(Mode=="darkMode"){
            Mode="lightMode";
            MyMode="lightModeMain";
            FormMode="lightForm";
        }
        else{
             Mode="darkMode";
             MyMode="darkModeMain";
             FormMode="darkForm";
        }
        StateHasChanged();
    }
}